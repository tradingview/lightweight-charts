diff --git a/node_modules/fancy-canvas/canvas-rendering-target.d.ts b/node_modules/fancy-canvas/canvas-rendering-target.d.ts
index de2c33d..24a655c 100644
--- a/node_modules/fancy-canvas/canvas-rendering-target.d.ts
+++ b/node_modules/fancy-canvas/canvas-rendering-target.d.ts
@@ -4,14 +4,14 @@ import { Binding as CanvasElementBitmapSizeBinding } from './canvas-element-bitm
  * @experimental
  */
 export interface MediaCoordinatesRenderingScope {
-    readonly context: CanvasRenderingContext2D;
+    readonly context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;
     readonly mediaSize: Size;
 }
 /**
  * @experimental
  */
 export interface BitmapCoordinatesRenderingScope {
-    readonly context: CanvasRenderingContext2D;
+    readonly context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;
     readonly mediaSize: Size;
     readonly bitmapSize: Size;
     readonly horizontalPixelRatio: number;
@@ -24,7 +24,7 @@ export declare class CanvasRenderingTarget2D {
     private readonly _context;
     private readonly _mediaSize;
     private readonly _bitmapSize;
-    constructor(context: CanvasRenderingContext2D, mediaSize: Size, bitmapSize: Size);
+    constructor(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, mediaSize: Size, bitmapSize: Size);
     useMediaCoordinateSpace<T>(f: (scope: MediaCoordinatesRenderingScope) => T): T;
     useBitmapCoordinateSpace<T>(f: (scope: BitmapCoordinatesRenderingScope) => T): T;
     private get _horizontalPixelRatio();
diff --git a/node_modules/fancy-canvas/canvas-rendering-target.mjs b/node_modules/fancy-canvas/canvas-rendering-target.mjs
index bde509c..e4f776d 100644
--- a/node_modules/fancy-canvas/canvas-rendering-target.mjs
+++ b/node_modules/fancy-canvas/canvas-rendering-target.mjs
@@ -18,8 +18,14 @@ var CanvasRenderingTarget2D = /** @class */ (function () {
         try {
             this._context.save();
             // do not use resetTransform to support old versions of Edge
-            this._context.setTransform(1, 0, 0, 1, 0, 0);
-            this._context.scale(this._horizontalPixelRatio, this._verticalPixelRatio);
+            var c = this._context;
+            if (typeof c.resetTransform === 'function') {
+                c.resetTransform();
+            }
+            else {
+                c.setTransform(1, 0, 0, 1, 0, 0);
+            }
+            c.scale(this._horizontalPixelRatio, this._verticalPixelRatio);
             return f({
                 context: this._context,
                 mediaSize: this._mediaSize,
@@ -33,7 +39,13 @@ var CanvasRenderingTarget2D = /** @class */ (function () {
         try {
             this._context.save();
             // do not use resetTransform to support old versions of Edge
-            this._context.setTransform(1, 0, 0, 1, 0, 0);
+            var c = this._context;
+            if (typeof c.resetTransform === 'function') {
+                c.resetTransform();
+            }
+            else {
+                c.setTransform(1, 0, 0, 1, 0, 0);
+            }
             return f({
                 context: this._context,
                 mediaSize: this._mediaSize,
